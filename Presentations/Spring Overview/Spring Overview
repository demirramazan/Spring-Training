www.spring.io -> bu kaynaktan dokumanlara gozatabilir, yeni basliyanlar icin tutorials kisimlarina goz atabilir ve gerekli guncellemeleri buradan takip edebiliriz.

Peki Spring Frameworkunung Hedefleri Neler ?

-> Lightweight development with Java POJOs (Plaing Old Java Objects) 
Eski surum EJB J2EE'ye gore cok daha basit bi hafif bir sekilde Java kurumsal projeleri gelistirebiliyoruz.

-> Dependency Injection
Spring'in en onemli terimlerinden bi tanesidir. Avanjati ise nesneleri hardware ile baglamak yerine, anatasyonlar veya konfigurasyon dosyasi yardimi ile bagliyoruz. Yani Spring bizim icin onunla ilgileniyor. Cokta guzel yapiyor :-)

-> AOP(Aspect-Oriented-Programming) ile programlama yapma imkanini buluyoruz. 

-> Boilerplate Java Code diye tabir edilen basmakalip java kodlarini en az duzeye indirgeyerek, repatation yani tekrar etme gibi bir sorundan da kacmak icin Spring iyi bir framework'tur.

SPRING CORE CONTAINER 

Beans ->
Core
SpEL
Context

manages how beans are created
it has a bean factory for creating the beans
read the config for setting properties and dependencies
Context is the spring container here which holds the beans in the memory
SpEL-> Spring expressiong languages. Ornekleri source kodta gorecegiz. 
Core Container genel olarak beanleri create etmemizi ve daha sonra onlari kullanmamiza olanak saglayan Spring Frameworkunun cekirdek kismi oluyor. Yani isin beyni burada aslinda.

SPRING INSFRACTURE 

AOP
Aspects
Instrumentation
Messaging
Burasi AOP destekleyen bolum olmaktadir. Yani logging, security, transiction gibi kisimlar icin extra caba harcamaya gerek yok servis bir config file veya anatasyon yardimili ile islerimizi halleder.

DATA ACCESS LAYER

JDBC
ORM
Transiction 
OXM
JMS
Basit olarak bisey soylemek gerekirse bu katman veri tabani ile iletisime gecilen katmandir.Tepede JDBC var. Onun sayesinde zaten kod yazma gereksinimizi yuzde elli dusuruyoruz. Bu da JDBC helper classlar sayesinde oluyor.

ORM -> Object to Relational Mapping
Bu modulun en populer sectioni diyebiliriz. Temel olarak Hibernate ve JPA ile integrasyon edilen katmandir.
JMS -> Java Message Service 
Send messages to Message queue. JMS'te yardimci siniflar sayesinde yine yazacagimiz koddan oldukca tassaruf edebiliriz.

WEB LAYER

Servlert
Web Socket
Web
Portlet

Temel olarak spring MVC framework icin evimiz burasi diyebiliriz. Butun MVC layout umuz burada yer almakta.

TEST LAYER

Unit
Integration
Mock

TDD denilen Test Driven Development olayimizi Spring desteklemektedir.